version: "2.2"
services:
  redis:
    image: redis:alpine
    container_name: redis

  app:
    build: 
      context: .
    volumes:
      - static:/static
      - .:/django   
    environment:
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    ports:
      - "8000:8000"
    env_file: 
      - .env

  celery:
    restart: always
    build:
      context: .
    command: celery -A quiz_site worker --loglevel=INFO
    volumes:
      - .:/django
    container_name: celery
    depends_on:
      - redis
      - app
    env_file:
      - .env

  nginx-proxy:
    build: ./nginx
    ports:
      - 80:80
      - 443:443
    restart: always
    depends_on:
      - app
    volumes:
      - static:/static

      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
  
  # nginx-proxy-letsencrypt:
  #   image: jrcs/letsencrypt-nginx-proxy-companion
  #   env_file:
  #     - ./.env.proxy-companion
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - certs:/etc/nginx/certs
  #     - html:/usr/share/nginx/html
  #     - vhost:/etc/nginx/vhost.d
  #     - acme:/etc/acme.sh
  #   depends_on:
  #     - nginx-proxy


volumes:
  static:
  certs:
  html:
  vhost:
  acme: